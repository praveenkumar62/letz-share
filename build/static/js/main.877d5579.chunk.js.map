{"version":3,"sources":["Messages.js","Input.js","App.js","serviceWorker.js","index.js"],"names":["Messages","_this","this","messages","props","react_default","a","createElement","className","map","m","renderMessage","message","member","text","currentMember","id","style","backgroundColor","clientData","color","username","Component","Input","state","e","setState","target","value","preventDefault","onSendMessage","_this2","onSubmit","onChange","type","placeholder","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","adjectives","nouns","Math","floor","random","length","randomName","toString","drone","publish","room","window","Scaledrone","data","on","error","console","objectSpread","clientId","subscribe","push","href","marginRight","src_Messages","src_Input","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.877d5579.chunk.js","sourcesContent":["import {Component} from \"react\";\nimport React from \"react\";\n\nclass Messages extends Component {\n  render() {\n    const {messages} = this.props;\n    return (\n      <ul className=\"Messages-list\">\n        {messages.map(m => this.renderMessage(m))}\n      </ul>\n    );\n  }\n\n  renderMessage(message) {\n    const {member, text} = message;\n    const {currentMember} = this.props;\n    const messageFromMe = member.id === currentMember.id;\n    const className = messageFromMe ?\n      \"Messages-message currentMember\" : \"Messages-message\";\n    return (\n      <li className={className}>\n      <span\n        className=\"avatar\"\n        style={{backgroundColor: member.clientData.color}}\n      />\n        <div className=\"Message-content\">\n          <div className=\"username\">\n            {member.clientData.username}\n          </div>\n          <div className=\"text\">{text}</div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Messages;\n","import {Component} from \"react\";\nimport React from \"react\";\n\nclass Input extends Component {\n  state = {\n    text: \"\"\n  }\n\n  onChange(e) {\n    this.setState({text: e.target.value});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({text: \"\"});\n    this.props.onSendMessage(this.state.text);\n  }\n\n  render() {\n    return (\n      <div className=\"Input container\">\n        <form onSubmit={e => this.onSubmit(e)}>\n          <input\n            onChange={e => this.onChange(e)}\n            value={this.state.text}\n            type=\"text\"\n            placeholder=\"Type what you want to share...\"\n          />\n          <button> <span className=\"hidden-sm hidden-xs\">Send</span> <i className=\"fa fa-paper-plane-o\"></i></button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport Messages from \"./Messages\";\nimport Input from \"./Input\";\n\nfunction randomName() {\n  const adjectives = [\n    \"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\",\n    \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\",\n    \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\",\n    \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\",\n    \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\",\n    \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\",\n    \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\",\n    \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\",\n    \"ancient\", \"purple\", \"lively\", \"nameless\"\n  ];\n  const nouns = [\n    \"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\",\n    \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\",\n    \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\",\n    \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\",\n    \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\",\n    \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\",\n    \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\",\n    \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\",\n    \"smoke\", \"star\"\n  ];\n  const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n  const noun = nouns[Math.floor(Math.random() * nouns.length)];\n  return adjective + noun;\n}\n\nfunction randomColor() {\n  return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}\n\nclass App extends Component {\n  state = {\n    messages: [],\n    member: {\n      username: randomName(),\n      color: randomColor(),\n    }\n  }\n\n  constructor() {\n    super();\n    this.drone = new window.Scaledrone(\"KVJ2cyzTGc4g1aga\", {\n      data: this.state.member\n    });\n    this.drone.on('open', error => {\n      if (error) {\n        return console.error(error);\n      }\n      const member = {...this.state.member};\n      member.id = this.drone.clientId;\n      this.setState({member});\n    });\n    const room = this.drone.subscribe(\"observable-room\");\n    room.on('data', (data, member) => {\n      const messages = this.state.messages;\n      messages.push({member, text: data});\n      this.setState({messages});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n            <p className=\"dev-links hidden-sm hidden-xs\">\n              <a href=\"https://github.com/praveenkumar62\"><i className=\"fa fa-github\"></i></a>\n              <a href=\"http://facebook.com/praveen.cruzerz\"><i className=\"fa fa-facebook-official\"></i></a>\n              <a href=\"https://www.linkedin.com/in/praveen-kumar-309334159\"><i className=\"fa fa-linkedin-square\"></i></a>\n            </p>\n            <p className=\"dev-author hidden-sm hidden-xs\"><span>Praveen Cruzerz </span> <i className=\"fa fa-paw\"></i></p>\n          <h1>\n            <i className=\"fa fa-comments\" style={{marginRight: '10px'}}></i>\n              Let'z Share...\n          </h1>\n        </div>\n        <Messages\n          messages={this.state.messages}\n          currentMember={this.state.member}\n        />\n        <br />\n        <Input\n          onSendMessage={this.onSendMessage}\n        />\n      </div>\n    );\n  }\n\n  onSendMessage = (message) => {\n    this.drone.publish({\n      room: \"observable-room\",\n      message\n    });\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}